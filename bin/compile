#!/usr/bin/env bash
# Working LaTeX buildpack based on successful Heroku buildpacks

BUILD_DIR=$1
CACHE_DIR=$2
BIN_DIR=$(cd $(dirname $0); pwd)

# Use TinyTeX from GitHub releases (more reliable than install-tl)
TINYTEX_VERSION="v2023.05"
TINYTEX_URL="https://github.com/rstudio/tinytex-releases/releases/download/${TINYTEX_VERSION}/TinyTeX-1-${TINYTEX_VERSION#v}.tar.gz"
TEXLIVE_HOME="$BUILD_DIR/.texlive"
TEXLIVE_CACHE="$CACHE_DIR/.texlive"
PROFILE_D="$BUILD_DIR/.profile.d/texlive.sh"

echo "-----> Installing TinyTeX for CV generation"

# Create directories
mkdir -p "$TEXLIVE_HOME"
mkdir -p "$TEXLIVE_CACHE"
mkdir -p "$(dirname $PROFILE_D)"

# Check if we have a cached version
if [ -f "$TEXLIVE_CACHE/VERSION" ] && [ "$(cat $TEXLIVE_CACHE/VERSION)" = "$TINYTEX_VERSION" ]; then
    echo "-----> Installing TinyTeX $TINYTEX_VERSION from cache"
    cp -R "$TEXLIVE_CACHE"/* "$TEXLIVE_HOME/"
else
    echo "-----> Downloading TinyTeX $TINYTEX_VERSION"
    curl -L "$TINYTEX_URL" -s -o - | tar xzf - -C "$TEXLIVE_HOME" --strip-components=1 || {
        echo "ERROR: Failed to download and extract TinyTeX"
        exit 1
    }

    # Cache the installation
    rm -rf "$TEXLIVE_CACHE"/*
    cp -R "$TEXLIVE_HOME"/* "$TEXLIVE_CACHE/"
    echo "$TINYTEX_VERSION" > "$TEXLIVE_CACHE/VERSION"
fi

# Find TeX Live binaries
TEXLIVE_BIN_DIR=""
for bin_dir in "$TEXLIVE_HOME/.TinyTeX/bin/x86_64-linux" "$TEXLIVE_HOME/bin/x86_64-linux"; do
    if [ -d "$bin_dir" ] && [ -x "$bin_dir/pdflatex" ]; then
        TEXLIVE_BIN_DIR="$bin_dir"
        break
    fi
done

if [ -z "$TEXLIVE_BIN_DIR" ]; then
    echo "ERROR: Could not find TeX Live binaries"
    find "$TEXLIVE_HOME" -name "pdflatex" -type f 2>/dev/null || echo "pdflatex not found"
    exit 1
fi

echo "-----> Found TeX Live binaries at: $TEXLIVE_BIN_DIR"

# Set up PATH
export PATH="$TEXLIVE_BIN_DIR:$PATH"

# Test pdflatex
if ! "$TEXLIVE_BIN_DIR/pdflatex" --version >/dev/null 2>&1; then
    echo "ERROR: pdflatex test failed"
    exit 1
fi

echo "-----> pdflatex is working"

# Install essential packages for CV if tlmgr is available
if [ -x "$TEXLIVE_BIN_DIR/tlmgr" ]; then
    echo "-----> Installing essential CV packages"
    
    # Initialize tlmgr repository
    "$TEXLIVE_BIN_DIR/tlmgr" option repository ctan >/dev/null 2>&1 || true
    
    # Essential packages for CV generation
    PACKAGES="geometry fontawesome5 tcolorbox enumitem xcolor hyperref pgf etoolbox amsfonts setspace"
    
    for package in $PACKAGES; do
        echo "       Installing $package..."
        if "$TEXLIVE_BIN_DIR/tlmgr" install "$package" >/dev/null 2>&1; then
            echo "       ✓ $package installed"
        else
            echo "       ✗ $package failed (will try on-demand)"
        fi
    done
else
    echo "-----> tlmgr not available, using base packages only"
fi

# Set up environment for runtime
cat > "$PROFILE_D" << EOF
export PATH="$TEXLIVE_BIN_DIR:\$PATH"
export TEXMFCACHE="/tmp/texmf-cache"
mkdir -p "\$TEXMFCACHE"
EOF

echo "-----> LaTeX installation complete"
echo "       Binary location: $TEXLIVE_BIN_DIR"

# Create test script
cat > "$BUILD_DIR/test-latex.sh" << 'EOF'
#!/bin/bash
echo "=== LaTeX Test ==="
echo "pdflatex: $(which pdflatex)"
echo "Version: $(pdflatex --version 2>&1 | head -1)"

# Test basic compilation
cat > /tmp/test.tex << 'TESTDOC'
\documentclass{article}
\usepackage{geometry}
\begin{document}
Hello LaTeX!
\end{document}
TESTDOC

echo "Testing compilation..."
if pdflatex -interaction=nonstopmode -output-directory=/tmp /tmp/test.tex >/dev/null 2>&1; then
    echo "✓ Compilation successful!"
    ls -la /tmp/test.pdf 2>/dev/null && echo "PDF created: $(wc -c < /tmp/test.pdf) bytes"
else
    echo "✗ Compilation failed"
fi
EOF
chmod +x "$BUILD_DIR/test-latex.sh"

echo "-----> Test script created at /app/test-latex.sh"
